//
//  DogsListViperProtocols.swift
//  WizelineArchitectuesSMES
//
//  Created Adrian Piedra on 09/03/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Router -
protocol DogsListViperRouterProtocol: AnyObject {
    //Navigate to the dog's details
    func goToDogDetail(_ dog: Dog)
}

//MARK: Presenter -
protocol DogsListViperPresenterProtocol: AnyObject {
    var source: [Dog] { get }
    
    //Handle the action of the view when user tapped a dog
    func dogTapped(_ dog: Dog)
    
    //Notify to the view the dogs are loaded with its status
    func didLoadDogs(status: DogListAPIStatus)
    
    //Ask the data to the interactor
    func getDogs()
}

//MARK: Interactor -
protocol DogsListViperInteractorProtocol: AnyObject {
    
    //Binding between Presenter <-> Interactor
    var presenter: DogsListViperPresenterProtocol?  { get set }
    
    //API Instance
    var api: DogAPI { get }
    
    //Execute Network/DB request
    func getDogs()
}

//MARK: View -
protocol DogsListViperViewProtocol: AnyObject {
    //Binding between View <-> Presenter
    var presenter: DogsListViperPresenterProtocol?  { get set }
    
    //Receive notifications from the presenter
    func didLoadDogs(status: DogListAPIStatus)
}




